<UserControl x:Class="CESHP.VIEW.AdicionarTrechoDialog "
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CESHP.VIEW"
             mc:Ignorable="d"
			 IsEnabled="{Binding Path=shp.IsEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
			 >
	<Grid Margin="10,10,10,10">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" MinHeight="20" />
			<RowDefinition Height="Auto" MinHeight="20" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
		</Grid.ColumnDefinitions>
		<DockPanel Grid.Row="0">
			<DataGrid
					AutoGenerateColumns="False"
					CanUserResizeColumns="False"
					CanUserResizeRows="False"
					RowHeaderWidth="0"
					GridLinesVisibility="None"
					SelectionMode="Single"
					IsReadOnly="True"
					IsEnabled="True"
					SelectionUnit="FullRow"
					DataContext="{Binding}"
					ItemsSource="{Binding Path=shp.trechos, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					SelectedItem="{Binding Path=shp.trechosSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					IsSynchronizedWithCurrentItem="true"
					AlternationCount="2"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					ScrollViewer.VerticalScrollBarVisibility="Disabled"
				>
				<DataGrid.Resources>
					<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
				</DataGrid.Resources>
				<DataGrid.RowStyle>
					<Style TargetType="{x:Type DataGridRow}">
						<Setter Property="Margin" Value="0,2,0,2"/>
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="BorderBrush" Value="Black"/>
						<Style.Triggers>
							<Trigger Property="AlternationIndex" Value="0">
								<Setter Property="Background" Value="White" />
							</Trigger>
							<Trigger Property="AlternationIndex" Value="1">
								<Setter Property="Background" Value="WhiteSmoke" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="Khaki" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</DataGrid.RowStyle>
				<DataGrid.Columns>
					<DataGridTemplateColumn Header="Trecho">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
									<ComboBox Width="{Binding Path=DataContext.shp.minWidthPonto, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" VerticalAlignment="Center"
													ItemsSource="{Binding Path=DataContext.shp.pontosPontosOnly, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
													DisplayMemberPath="nome"
													SelectedValue="{Binding Path=inicio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												/>
									<Label Content="-"/>

									<ComboBox Width="{Binding Path=DataContext.shp.minWidthPonto, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" VerticalAlignment="Center"
												ItemsSource="{Binding Path=DataContext.shp.pontosPontosOnly, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
												DisplayMemberPath="nome"
												SelectedValue="{Binding Path=fim, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												Visibility="{Binding Path=showNotHidrante, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }"
											/>
									<ComboBox Width="{Binding Path=DataContext.shp.minWidthPonto, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" VerticalAlignment="Center"
												ItemsSource="{Binding Path=DataContext.shp.pontosHidrantesOnly, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
												DisplayMemberPath="nome"
												SelectedValue="{Binding Path=fim, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												Visibility="{Binding Path=showHidrante, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }"
											/>
								</StackPanel>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<DataGridTemplateColumn Header="Hid." Width="30">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<CheckBox  HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=isHidrante, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<DataGridTemplateColumn Header="Material" Width="130"  >
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<ComboBox Width="120" VerticalAlignment="Center"
											ItemsSource="{Binding Path=DataContext.materiais, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
											DisplayMemberPath="nome"
											SelectedIndex="{Binding Path=materialIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>


					<DataGridTemplateColumn Header="&#8960;" Width="60">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<ComboBox Width="50" VerticalAlignment="Center"
											ItemsSource="{Binding Path=material.diametros, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											DisplayMemberPath="diametro_nominal"
											SelectedIndex="{Binding Path=diametroIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<DataGridTemplateColumn Header="Comp." Width="60">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBox Width="50" Text="{Binding Path=comprimento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture='pt-BR', StringFormat=N2, Delay=500}" VerticalAlignment="Center"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>


					<DataGridTemplateColumn Header="Desn." Width="60">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBox Width="50" Text="{Binding Path=desnivel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture='pt-BR', StringFormat=N2, Delay=500}" VerticalAlignment="Center"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<DataGridTemplateColumn Header="&#8960; Mang." Width="70">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<ComboBox Width="60" VerticalAlignment="Center"
											ItemsSource="{Binding Path=DataContext.mangueiras, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
											DisplayMemberPath="nome"
											SelectedIndex="{Binding Path=MaterialMangueiraIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											Visibility="{Binding Path=showHidrante, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
											/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<DataGridTemplateColumn Header="Comp." Width="60" >
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBox Width="50" Text="{Binding Path=comprimentoDaMangueira, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture='pt-BR', StringFormat=N0, Delay=500}" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding Path=showHidrante, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<DataGridTemplateColumn Header="Desn." Width="60" >
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBox Width="50" Text="{Binding Path=desnivelDaMangueira, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture='pt-BR', StringFormat=N2, Delay=500}" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding Path=showHidrante, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>

			</DataGrid>
		</DockPanel>
		<StackPanel Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Height="50">
			<Button Command="{Binding SalvaCommand}"
					x:Name="Button_Salva"
					Height="25"
					MinWidth="80"
					Content="OK"
					Margin="5 0 5 0" />
			<Button Command="{Binding CancelaCommand}"
					Height="25"
					MinWidth="80"
					Content="Cancelar"
					Margin="5 0 5 0" />
		</StackPanel>
	</Grid>
</UserControl>
